{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Mikey's test site The purpose of this site is to provide a website that holds all my helpfiles, blogs, wiki's and other web based resources. It has been created using a static website generator call MKDocs (having tried to do something similar in Vimwiki and Hugo). Vimwiki is a great tool for creating a personal wiki although it is limited as static website generator. It basically turns a markdown wiki into a set of html pages. Hugo on the other hand is a very comprehensive static website generator that can be used to create a multitude of different websites and is therefore much more difficult to get it up and running. (Steep learning curve). MKDocs is the perfect trade off between simplicity and versatility. It was designed for creating and stucturing help manuals. It is very simple to set up and is the perfect tool for creating simple websites. I am using a static website site generator to create website content that can be used as a web based file store, a wiki, and a can be used as a standalone website and can host sever","title":"Home"},{"location":"#welcome-to-mikeys-test-site","text":"The purpose of this site is to provide a website that holds all my helpfiles, blogs, wiki's and other web based resources. It has been created using a static website generator call MKDocs (having tried to do something similar in Vimwiki and Hugo). Vimwiki is a great tool for creating a personal wiki although it is limited as static website generator. It basically turns a markdown wiki into a set of html pages. Hugo on the other hand is a very comprehensive static website generator that can be used to create a multitude of different websites and is therefore much more difficult to get it up and running. (Steep learning curve). MKDocs is the perfect trade off between simplicity and versatility. It was designed for creating and stucturing help manuals. It is very simple to set up and is the perfect tool for creating simple websites. I am using a static website site generator to create website content that can be used as a web based file store, a wiki, and a can be used as a standalone website and can host sever","title":"Welcome to Mikey's test site"},{"location":"help/","text":"Welcome to Test For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. gh-pages Create an empty repo in Github (gh) Make it accessible using SSH git clone git@github.com: / .git into a project folder on your local computer mkdocs new cd mkdocs new Make changes to the Yaml (config) file and the markdown documents in docs folder Push to website using mkdocs gh-deploy View at .github.io/","title":"Help"},{"location":"help/#welcome-to-test","text":"For full documentation visit mkdocs.org .","title":"Welcome to Test"},{"location":"help/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"help/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"help/#gh-pages","text":"Create an empty repo in Github (gh) Make it accessible using SSH git clone git@github.com: / .git into a project folder on your local computer mkdocs new cd mkdocs new Make changes to the Yaml (config) file and the markdown documents in docs folder Push to website using mkdocs gh-deploy View at .github.io/","title":"gh-pages"}]}